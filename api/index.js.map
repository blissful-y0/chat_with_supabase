{
  "version": 3,
  "sources": ["<stdin>", "../app/entry.server.tsx", "../app/root.tsx", "../utils/supabase.server.ts", "../app/routes/index.tsx", "../app/components/login.tsx", "server-assets-manifest:@remix-run/dev/assets-manifest", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["export * from \"@remix-run/dev/server-build\";", "import type { EntryContext } from \"@remix-run/node\";\nimport { RemixServer } from \"@remix-run/react\";\nimport { renderToString } from \"react-dom/server\";\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  const markup = renderToString(\n    <RemixServer context={remixContext} url={request.url} />\n  );\n\n  responseHeaders.set(\"Content-Type\", \"text/html\");\n\n  return new Response(\"<!DOCTYPE html>\" + markup, {\n    headers: responseHeaders,\n    status: responseStatusCode,\n  });\n}\n", "import { json, LoaderArgs, MetaFunction } from \"@remix-run/node\";\nimport {\n  Links,\n  LiveReload,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration,\n  useLoaderData,\n} from \"@remix-run/react\";\nimport { SupabaseClient } from \"@supabase/supabase-js\";\nimport { useEffect, useState } from \"react\";\n\nimport createServerSupabase from \"utils/supabase.server\";\n\nimport type { Database } from \"db_types\";\nimport { createBrowserClient } from \"@supabase/auth-helpers-remix\";\nimport { hydrateRoot } from \"react-dom/client\";\n\ntype TypedSupabaseClient = SupabaseClient<Database>;\n\nexport type SupabaseOutletContext = {\n  supabase: TypedSupabaseClient;\n};\n\nexport const meta: MetaFunction = () => ({\n  charset: \"utf-8\",\n  title: \"New Remix App\",\n  viewport: \"width=device-width,initial-scale=1\",\n});\n\nexport const loader = async ({ request }: LoaderArgs) => {\n  const env = {\n    SUPABASE_URL: process.env.SUPABASE_URL!,\n    SUPABASE_ANON_KEY: process.env.SUPABASE_ANON_KEY!,\n  };\n\n  const response = new Response();\n  const supabase = createServerSupabase({ request, response });\n\n  const {\n    data: { session },\n  } = await supabase.auth.getSession();\n\n  return json({ env, session }, { headers: response.headers });\n};\n\nfunction App() {\n  const { env, session } = useLoaderData<typeof loader>();\n\n  console.log({ server: { session } });\n\n  const [supabase] = useState(() =>\n    createBrowserClient<Database>(env.SUPABASE_URL, env.SUPABASE_ANON_KEY)\n  );\n\n  useEffect(() => {\n    supabase.auth\n      .getSession()\n      .then((session) => console.log({ client: { session } }));\n  }, []);\n\n  return (\n    <html lang=\"en\">\n      <head>\n        <Meta />\n        <Links />\n      </head>\n      <body>\n        <Outlet context={{ supabase }} />\n        <ScrollRestoration />\n        <Scripts />\n        <LiveReload />\n      </body>\n    </html>\n  );\n}\n\nexport default App;\n", "import { createServerClient } from \"@supabase/auth-helpers-remix\";\n\nimport type { Database } from \"db_types\";\n\nexport default ({\n  request,\n  response,\n}: {\n  request: Request;\n  response: Response;\n}) =>\n  createServerClient<Database>(\n    process.env.SUPABASE_URL!,\n    process.env.SUPABASE_ANON_KEY!,\n    { request, response }\n  );\n", "import { json, LoaderArgs } from \"@remix-run/node\";\nimport { useLoaderData } from \"@remix-run/react\";\nimport createServerSupabase from \"utils/supabase.server\";\nimport Login from \"~/components/login\";\n\nexport const loader = async ({ request }: LoaderArgs) => {\n  const response = new Response();\n  const supabase = createServerSupabase({ request, response });\n  const { data } = await supabase.from(\"messages\").select();\n\n  return json({ messages: data ?? [] }, { headers: response.headers });\n};\n\nexport default function Index() {\n  const { messages } = useLoaderData<typeof loader>();\n\n  return (\n    <>\n      <Login />\n      <pre>{JSON.stringify(messages, null, 2)}</pre>;\n    </>\n  );\n}\n", "import { useOutletContext } from \"@remix-run/react\";\nimport type { SupabaseOutletContext } from \"~/root\";\n\nfunction Login() {\n  const { supabase } = useOutletContext<SupabaseOutletContext>();\n\n  const handleLogin = async () => {\n    const { error } = await supabase.auth.signInWithOAuth({\n      provider: \"github\",\n    });\n\n    if (error) {\n      console.log({ error });\n    }\n  };\n\n  const handleLogOut = async () => {\n    const { error } = await supabase.auth.signOut();\n\n    if (error) {\n      console.log({ error });\n    }\n  };\n  return (\n    <>\n      <button id=\"login\" onClick={handleLogin}>\n        \uB85C\uADF8\uC778\n      </button>\n      <button onClick={handleLogOut}>\uB85C\uADF8\uC544\uC6C3</button>\n    </>\n  );\n}\n\nexport default Login;\n", "export default {'version':'c087be3e','entry':{'module':'/build/entry.client-HONJIPCY.js','imports':['/build/_shared/chunk-TOGXTF7R.js','/build/_shared/chunk-4IYZMDEG.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-4HYBYZET.js','imports':['/build/_shared/chunk-XGTHKDRK.js','/build/_shared/chunk-WENNLJWR.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/index':{'id':'routes/index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/index-QDBIPJWJ.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false}},'url':'/build/manifest-C087BE3E.js'};", "\nimport * as entryServer from \"./entry.server.tsx\";\nimport * as route0 from \"./root.tsx\";\nimport * as route1 from \"./routes/index.tsx\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const assetsBuildDirectory = \"public/build\";\n  export const future = {\"v2_meta\":false};\n  export const publicPath = \"/build/\";\n  export const entry = { module: entryServer };\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/index\": {\n      id: \"routes/index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route1\n    }\n  };"],
  "mappings": "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",
  "names": ["import_react", "import_auth_helpers_remix", "import_jsx_dev_runtime", "session", "loader", "import_node", "import_react", "import_react", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "loader"]
}
